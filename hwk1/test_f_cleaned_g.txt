test_f_cleaned.cpp:8:2: error: use of undeclared identifier 'cin'
 cin >> n;
 ^
test_f_cleaned.cpp:9:2: error: use of undeclared identifier 'cout'
 cout << a << endl;
 ^
test_f_cleaned.cpp:9:15: error: use of undeclared identifier 'endl'
 cout << a << endl;
              ^
test_f_cleaned.cpp:10:2: error: use of undeclared identifier 'cout'
 cout << b << endl;
 ^
test_f_cleaned.cpp:10:15: error: use of undeclared identifier 'endl'
 cout << b << endl;
              ^
test_f_cleaned.cpp:15:2: error: use of undeclared identifier 'cout'
 cout << b << endl;
 ^
test_f_cleaned.cpp:15:15: error: use of undeclared identifier 'endl'
 cout << b << endl;
              ^
7 errors generated.
TranslationUnitDecl 0x204af78 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x204b7e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x204b540 '__int128'
|-TypedefDecl 0x204b850 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x204b560 'unsigned __int128'
|-TypedefDecl 0x204bbc8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x204b940 '__NSConstantString_tag'
|   `-CXXRecord 0x204b8a8 '__NSConstantString_tag'
|-TypedefDecl 0x204bc60 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x204bc20 'char *'
|   `-BuiltinType 0x204b020 'char'
|-TypedefDecl 0x20904b8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag[1]'
| `-ConstantArrayType 0x2090460 '__va_list_tag[1]' 1 
|   `-RecordType 0x204bd50 '__va_list_tag'
|     `-CXXRecord 0x204bcb8 '__va_list_tag'
`-FunctionDecl 0x2090560 <test_f_cleaned.cpp:1:1, line:19:2> line:1:5 main 'int ()'
  `-CompoundStmt 0x2090ec0 <line:2:2, line:19:2>
    |-DeclStmt 0x2090920 <line:3:2, col:19>
    | |-VarDecl 0x2090688 <col:2, col:6> col:6 used a 'int'
    | |-VarDecl 0x2090708 <col:2, col:9> col:9 used b 'int'
    | |-VarDecl 0x2090788 <col:2, col:12> col:12 used i 'int'
    | |-VarDecl 0x2090808 <col:2, col:15> col:15 used t 'int'
    | `-VarDecl 0x2090888 <col:2, col:18> col:18 used n 'int'
    |-BinaryOperator 0x2090978 <line:5:2, col:6> 'int' lvalue '='
    | |-DeclRefExpr 0x2090938 <col:2> 'int' lvalue Var 0x2090688 'a' 'int'
    | `-IntegerLiteral 0x2090958 <col:6> 'int' 0
    |-BinaryOperator 0x20909d8 <line:6:2, col:6> 'int' lvalue '='
    | |-DeclRefExpr 0x2090998 <col:2> 'int' lvalue Var 0x2090708 'b' 'int'
    | `-IntegerLiteral 0x20909b8 <col:6> 'int' 1
    |-BinaryOperator 0x2090a38 <line:7:2, col:6> 'int' lvalue '='
    | |-DeclRefExpr 0x20909f8 <col:2> 'int' lvalue Var 0x2090788 'i' 'int'
    | `-IntegerLiteral 0x2090a18 <col:6> 'int' 1
    `-WhileStmt 0x2090ea0 <line:11:2, line:18:2>
      |-BinaryOperator 0x2090ba0 <line:11:9, col:13> 'bool' '<'
      | |-ImplicitCastExpr 0x2090b70 <col:9> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x2090b30 <col:9> 'int' lvalue Var 0x2090788 'i' 'int'
      | `-ImplicitCastExpr 0x2090b88 <col:13> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x2090b50 <col:13> 'int' lvalue Var 0x2090888 'n' 'int'
      `-CompoundStmt 0x2090e70 <line:12:2, line:18:2>
        |-BinaryOperator 0x2090c18 <line:13:2, col:6> 'int' lvalue '='
        | |-DeclRefExpr 0x2090bc0 <col:2> 'int' lvalue Var 0x2090808 't' 'int'
        | `-ImplicitCastExpr 0x2090c00 <col:6> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x2090be0 <col:6> 'int' lvalue Var 0x2090708 'b' 'int'
        |-BinaryOperator 0x2090ce8 <line:14:2, col:10> 'int' lvalue '='
        | |-DeclRefExpr 0x2090c38 <col:2> 'int' lvalue Var 0x2090708 'b' 'int'
        | `-BinaryOperator 0x2090cc8 <col:6, col:10> 'int' '+'
        |   |-ImplicitCastExpr 0x2090c98 <col:6> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x2090c58 <col:6> 'int' lvalue Var 0x2090688 'a' 'int'
        |   `-ImplicitCastExpr 0x2090cb0 <col:10> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x2090c78 <col:10> 'int' lvalue Var 0x2090708 'b' 'int'
        |-BinaryOperator 0x2090d98 <line:16:2, col:6> 'int' lvalue '='
        | |-DeclRefExpr 0x2090d40 <col:2> 'int' lvalue Var 0x2090688 'a' 'int'
        | `-ImplicitCastExpr 0x2090d80 <col:6> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x2090d60 <col:6> 'int' lvalue Var 0x2090808 't' 'int'
        `-BinaryOperator 0x2090e50 <line:17:2, col:10> 'int' lvalue '='
          |-DeclRefExpr 0x2090db8 <col:2> 'int' lvalue Var 0x2090788 'i' 'int'
          `-BinaryOperator 0x2090e30 <col:6, col:10> 'int' '+'
            |-ImplicitCastExpr 0x2090e18 <col:6> 'int' <LValueToRValue>
            | `-DeclRefExpr 0x2090dd8 <col:6> 'int' lvalue Var 0x2090788 'i' 'int'
            `-IntegerLiteral 0x2090df8 <col:10> 'int' 1
